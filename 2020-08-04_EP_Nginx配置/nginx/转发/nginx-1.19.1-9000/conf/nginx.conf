
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       9000;
        server_name  localhost;
		add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Credentials' 'true';  
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		
		if ($time_iso8601 ~ '(\d{4}-\d{2}-\d{2})') {
			set $day $1;
		}
		access_log  logs/9000port/host.access_$day.log  combined;

        location / {
            proxy_pass http://19.121.251.230:9000/;
			proxy_next_upstream off;
        }
    }
	
	server {
        listen       7100;
        server_name  localhost;
		if ($time_iso8601 ~ '(\d{4}-\d{2}-\d{2})') {
			set $day $1;
		}
		access_log  logs/7100port/host.access_$day.log  combined;

      
    }
	
	server {
        listen       6080;
        server_name  localhost;
		if ($time_iso8601 ~ '(\d{4}-\d{2}-\d{2})') {
			set $day $1;
		}
		access_log  logs/7100port/host.access_$day.log  combined;

        location / {
            proxy_pass http://19.121.251.234:6080/;
			proxy_next_upstream off;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
